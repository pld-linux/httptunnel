#!/bin/sh
#
# httptunnel	httptunnel short service description
#
# chkconfig:    345  90 36
#
# description:	httptunnel long service description
#
# $Id$


# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network ]; then
		# nls "ERROR: Networking is down. %s can't be run." httptunnel
		msg_network_down httptunnel
		exit 1
	fi
else
	exit 0
fi


# See how we were called.
case "$1" in
  start)
	# Check if the service is already running?
	if [ ! -f /var/lock/subsys/httptunnel ]; then
		# show "Starting %s service" httptunnel
		msg_starting httptunnel
		awk '/^[!#]/ { print $0; }' \
			< /etc/sysconfig/httptunnel \
			| while read LISTEN_PORT FWD_HOST_PORT; do
			daemon hts.respawn -F "$FWD_HOST_PORT" "$LISTEN_PORT"
		done
		# FIXME: this probably doesn't work
		RETVAL=$?
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/httptunnel
	else
		# show "%s service is already running." httptunnel
		msg_already_running httptunnel
		exit 1
	fi
        ;;
  stop)
        # Stop daemons.
        # show "Stopping %s service" httptunnel
	if [ -f /var/lock/subsys/httptunnel ]; then
		msg_stopping httptunnel
		killproc hts.respawn
		RETVAL=$?
		rm -f /var/lock/subsys/httptunnel
	else
		# show "%s service is not running." httptunnel
		msg_not_running httptunnel
		exit 1
	fi	
        ;;
  restart)
        $0 stop
	$0 start
        ;;
  status)
	status httptunnel
	RETVAL=$?
        ;;
  *)
        # show "Usage: %s {start|stop|status|restart|reload|force-reload}" $0
	msg_usage "$0 {start|stop|status|restart|reload|force-reload}"
        exit 1
esac

exit $RETVAL

# This must be last line !
# vi:syntax=sh:tw=78:ts=8:sw=4
